dbname: vprodb
namespace: vpro-dev
replicaCount: 1

image:
  repository: sabirchoudhury001/vprofiledb
  pullPolicy: always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
service:
  name: vprodb-port
  type: ClusterIP
  port: 3306

env:
  secretname: sql-secret
  key: sqladminpass
  value: accounts
volumes: 
  name: secrets-akv
csi:
  driver: secrets-store.csi.k8s.io
  readOnly: true
  volumeAttributes:
  secretProviderClass: "azure-kvname-user-msi"






imagePullSecrets: []
nameOverride: "vprodb"
fullnameOverride: "vprodb"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000



resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
